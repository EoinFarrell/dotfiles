---
# ansible-playbook -i inventory.ini base_setup_debian.yaml
- name: "Base Setup Debian"
  hosts: localhost
  tasks:

    - name: 
      file:
        path: ~/tmp
        state: directory

    ### Add Repos ###

    - name: "Setup Docker keyring"
      command: install -m 0755 -d /etc/apt/keyrings

    - name: Add docker apt key
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/debian/gpg
        dest: /etc/apt/keyrings/docker.asc
        # checksum: sha256:bb42f0db45d46bab5f9ec619e1a47360b94c27142e57aa71f7050d08672309e0
      become: true

    - name: Add docker apt repo
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian/ {{ ansible_distribution_release }} stable"
        state: present
      become: true
    
    # - name: Add Ghossty Apt key
    #   command: curl -fsSL https://download.opensuse.org/repositories/home:clayrisser:bookworm/Debian_12/Release.key | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/home_clayrisser_bookworm.gpg > /dev/null

    # - name: Add Ghossty apt repo rpeo
    #   ansible.builtin.apt_repository:
    #     repo: "deb http://download.opensuse.org/repositories/home:/clayrisser:/bookworm/Debian_12/ /"
    #     state: present

    
    # - name: One way to avoid apt_key once it is removed from your distro
    #   block:
    #     - name: somerepo |no apt key
    #       ansible.builtin.get_url:
    #         url: https://download.opensuse.org/repositories/home:clayrisser:bookworm/Debian_12/Release.key
    #         dest: /etc/apt/keyrings/somerepo.asc

    #     - name: somerepo | apt source
    #       ansible.builtin.apt_repository:
    #         repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/somerepo.asc] https://download.example.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    #         state: present

    ### Install Packages ###
    - name: Install aptitude
      apt:
        name: aptitude
        state: latest
        update_cache: false
      become: true

    - name: Update and upgrade apt packages
      apt:
        upgrade: yes
        update_cache: yes
        cache_valid_time: 86400
      become: true

    - name: Install base packages
      apt:
        pkg:
          - apt-transport-https
          - curl
          - ca-certificates
          - git
          - hstr
          - gpg
          - jq
          - lsd
          - rsync
          - tig
          - tmux
          - wget2
          - nfs-common
          # - ghossty
          - software-properties-common
          - zsh
          # - openssh-server
        state: latest
        update_cache: false
      become: true
    
    ### Install Additional Software ###
    # - name: Install Tailscale
    #   command: curl -fsSL https://tailscale.com/install.sh | sh
    
    ### Docker Install ###
    - name: Install base packages
      apt:
        pkg:
          - gnupg-agent
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
      become: true

    - name: Ensure group "docker" exists
      ansible.builtin.group:
        name: docker
        state: present
      become: true

    - name: Add current user to docker group
      command: sudo usermod -aG docker $USER
      become: true

    - name: Add feoin to docker group
      command: sudo usermod -aG docker feoin
      become: true

    ### ZSH ###

    - name: Check that the somefile.conf exists
      stat:
        path: ~/.zshrc
      register: zshrc_stat_result

    - name: Make Zsh default shell
      command: chsh -s /bin/zsh
      become: true

    - name: Download zsh installer
      get_url: 
        url: https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh 
        dest: ~/tmp/zsh-installer.sh
        mode: '0755'
      when: not zshrc_stat_result.stat.exists
        
    - name: Execute the zsh-installer.sh
      shell: ~/tmp/zsh-installer.sh
      when: not zshrc_stat_result.stat.exists

    - name: Remove the zsh-installer.sh
      file: 
        path: ~/tmp/zsh-installer.sh 
        state: absent
      when: not zshrc_stat_result.stat.exists

    - name: Set zsh as default shell for feoin
      user:
        name: feoin
        shell: /bin/zsh
      become: true
      
    
        
    ### NFS Directories ###
    # - name: "Create NFS Directories"
    #   file:
    #     path: "/mnt/unraid-nfs-ansible"
    #     state: directory
    # - name: "Create NFS Directories"
    #   file:
    #     path: "/mnt/unraid-nfs-ansible{{ item }}"
    #     state: directory
    #   loop:
    #     - /Docker-Volumes
    #     - /Media
    #     - /Temp
    # - name: "mount options for Docker-Volumes Mount"
    #   ansible.posix.mount:
    #     path: "/mnt/unraid-nfs-ansible{{ item }}"
    #     src: "192.168.0.225:/mnt/user{{ item }}"
    #     fstype: "nfs"
    #     opts: "nfsvers=3,nolock,soft,rw"
    #     state: mounted
    #   loop:
    #     - /Docker-Volumes
    #     - /Media
    #     - /Temp

    ### Finalizer ###

    - name: Check if a reboot is required.
      ansible.builtin.stat:
        path: /var/run/reboot-required
        get_checksum: no
      register: reboot_required_file
    - name: Reboot the server (if required).
      ansible.builtin.reboot:
      when: reboot_required_file.stat.exists == true
    - name: Remove dependencies that are no longer required.
      ansible.builtin.apt:
        autoremove: yes
      become: true