---
# ansible-playbook -i inventory.ini monitoring/grafana-docker.yaml
- name: "Base Setup"
  hosts: 127.0.0.1
  connection: local
  tasks:
  - name: Example from an Ansible Playbook
    ansible.builtin.ping:
  #- name: Update Homebrew
  #  community.general.homebrew:
  #    update_homebrew: true
  - name: Install Casks
    community.general.homebrew:
      name: "homebrew/cask/{{ item }}"
      state: latest
    loop:
      - devtoys
      - disk-inventory-x
      - docker
      - firefox
      - grandperspective
      # - http-toolkit
      - iterm2
      - jetbrains-toolbox
      - kdiff3
      - maccy
      - obsidian
      - postman
      - rectangle
      - slack
      - spotify
      - tigervnc-viewer
      - visual-studio-code
      - zoom
  - name: Install Packages
    community.general.homebrew:
      name: "{{ item }}"
      state: latest
    loop:
      - ansible
      - awscli
      - colima
      - coreutils
     # - derailed/k9s/k9s
      - docker-compose
      - fzf
      - gh
      - git
      - guile
      - helm
      - hstr
     # - hudochenkov/sshpass/sshpass
      - hugo
      - jq
     # - kubecolor/tap/kubecolor
      - kubectx
      - lsd
      - mailhog
      - mdcat
      - mysql
      - openssl@1.1
      - prettier
      - protobuf
      - rsync
      - tig
      - tldr
      - tmux
      - tree
      - watch
      - wget
     # - xo/xo/usql
      - zsh
  - name: Setup Code dirs
    ansible.builtin.file:
      path: ~/Code/personal/dotfiles
      state: directory
      recurse: yes
  - name: Check Dotfiles exists
    stat:
      path: ~/Code/personal/dotfiles
    register: dotfilesContents
  - name: Clone dotfiles
    ansible.builtin.git:
      repo: 'https://github.com/EoinFarrell/dotfiles.git'
      dest: ~/Code/personal/dotfiles
    when: not dotfilesContents.stat.exists
  - name: Setup asdf vm dirs
    ansible.builtin.file:
      path: ~/.asdf
      state: directory
      recurse: yes
  - name: Clone asdfvm
    ansible.builtin.git:
      repo: 'https://github.com/asdf-vm/asdf.git'
      dest: ~/.asdf
  - name: Check ohMyZsh exists
    stat:
      path: ~/.oh-my-zsh
    register: ohMyZshContents
  - name: Download Oh My Zsh Installer
    command: wget https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh
    when: not ohMyZshContents.stat.exists
  - name: Run Zsh Installer
    command: sh install.sh
    when: not ohMyZshContents.stat.exists
  - name: Delete Zsh Installer
    command: rm install.sh
    when: not ohMyZshContents.stat.exists
  - name: Delete existing Zshrc
    command: rm ~/.zshrc
    when: not ohMyZshContents.stat.exists
  - name: Create a symbolic links
    ansible.builtin.file:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
      state: link
    loop:
      - { src: '~/Code/personal/dotfiles/zsh/zshrc' , dest: '~/.zshrc'}
      - { src: '~/Code/personal/dotfiles/zsh/oh-my-zsh/custom.zsh' , dest: '~/.oh-my-zsh/custom/custom.zsh'}
      - { src: '~/Code/personal/dotfiles/zsh/oh-my-zsh/powerlevel10k.zsh' , dest: '~/.oh-my-zsh/custom/powerlevel10k.zsh'}
      - { src: '~/Code/personal/dotfiles/zsh/init.sh' , dest: '~/.oh-my-zsh/custom/init.sh'}
      - { src: '~/Code/personal/dotfiles/git/.gitignore' , dest: '~/.gitignore'}
      - { src: '~/Code/personal/dotfiles/git/.gitconfig' , dest: '~/.gitconfig'}
      - { src: '~/Code/personal/dotfiles/tmux/.tmux.conf' , dest: '~/.tmux.conf'}
      - { src: '~/Code/personal/dotfiles/tig/.tigrc' , dest: '~/.tigrc'}
      - { src: '~/Code/personal/dotfiles/vim/.vimrc' , dest: '~/.vimrc'}
      - { src: '~/Code/personal/dotfiles/asdf/.asdfrc' , dest: '~/.asdfrc'}
  

  