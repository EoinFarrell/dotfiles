---
# ansible-playbook -i inventory.ini base_setup.yaml
- name: "Base Setup"
  hosts: 127.0.0.1
  connection: local
  tasks:
  - name: Update Homebrew
    community.general.homebrew:
     update_homebrew: true
  - name: Remove Casks
    community.general.homebrew:
      name: "homebrew/cask/{{ item }}"
      state: absent
    loop:
    - obsidian
  - name: Install Casks
    community.general.homebrew:
      name: "homebrew/cask/{{ item }}"
      state: present
    loop:
      - devtoys
      - disk-inventory-x
      - docker
      - firefox
      # - google-chrome
      - grandperspective
      # - http-toolkit
      - iterm2
      - jetbrains-toolbox
      - jordanbaird-ice
      - kdiff3
      - maccy
      - postman
      - rectangle
      # - slack
      - spotify
      - tigervnc-viewer
      - visual-studio-code
      - vlc
      # - zoom
  - name: Remove Packages
    community.general.homebrew:
      name: "{{ item }}"
      state: absent
    loop:
    - fzf
  - name: Install Packages
    community.general.homebrew:
      name: "{{ item }}"
      state: present
    loop:
      - ansible
      - awscli
      - bat
      - colima
      - coreutils
     # - derailed/k9s/k9s
      - docker-compose
      - doggo
      - gh
      - git
      - guile
      - helm
      - hstr
     # - hudochenkov/sshpass/sshpass
      - hugo
      - jq
     # - kubecolor/tap/kubecolor
      - kubectl
      - kubectx
      - kubecolor
      - lazydocker
      - lazygit
      - lsd
      - mailhog
      - mdcat
      - mysql
      - openssl@1.1
      - prettier
      - protobuf
      - rsync
      - superfile
      - tig
      - tealdeer #tldr in rust
      - tmux
      - tmuxinator
      - tree
      - txn2/tap/kubefwd
      - watch
      - wget2
     # - xo/xo/usql
      - zsh
  - name: Tap Homebrew repositorys
    community.general.homebrew_tap:
      name: "{{ item }}"
      state: present
    loop:
      - localsend/localsend
      # - sachaos/todoist
  - name: Install Tap Packages
    community.general.homebrew:
      name: "{{ item }}"
      state: present
    loop:
      - localsend
      # - todoist
  - name: Setup asdf vm dirs
    ansible.builtin.file:
      path: ~/.asdf
      state: directory
      recurse: yes
  - name: Clone asdfvm
    ansible.builtin.git:
      repo: 'https://github.com/asdf-vm/asdf.git'
      dest: ~/.asdf
  - name: Check zshrc exists
    stat:
      path: ~/.zshrc
    register: ohMyZshContents
  - name: Download Oh My Zsh Installer
    command: wget2 https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh
    when: not ohMyZshContents.stat.exists
  - name: Run Zsh Installer
    command: sh install.sh
    when: not ohMyZshContents.stat.exists
  - name: Delete Zsh Installer
    command: rm install.sh
    when: not ohMyZshContents.stat.exists
  - name: Delete existing Zshrc
    command: rm ~/.zshrc
    when: not ohMyZshContents.stat.exists
  - name: Find all custom fonts
    find:
      paths: ~/Code/personal/dotfiles/fonts
      patterns: '*.ttf'
    register: findFonts
  - name: Install Fonts
    ansible.builtin.copy:
      src: "{{ item.path }}"
      dest: "/Library/Fonts/{{ item.path | basename }}"
    with_items: "{{ findFonts.files }}"
  - name: Install Rosetta
    command: softwareupdate --install-rosetta --agree-to-license