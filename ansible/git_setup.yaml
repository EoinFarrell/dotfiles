---
# ansible-playbook -i inventory.ini git_setup.yaml
- name: "Git Setup"
  hosts: 127.0.0.1
  connection: local
  vars:
    # Reusable lists so they can be referenced by multiple tasks
    personal_repos:
      - dotfiles
      - notes.eoinfarrell.dev

    link_dirs:
      - ~/.config/superfile
      - ~/.config/bat

    # List of maps for creating symlinks (src -> dest)
    dotfile_links:
      - { src: '~/Code/personal/dotfiles/zsh/zshrc' , dest: '~/.zshrc'}
      - { src: '~/Code/personal/dotfiles/git/.gitignore' , dest: '~/.gitignore'}
      - { src: '~/Code/personal/dotfiles/git/.gitconfig' , dest: '~/.gitconfig'}
      - { src: '~/Code/personal/dotfiles/tmux/.tmux.conf' , dest: '~/.tmux.conf'}
      - { src: '~/Code/personal/dotfiles/tig/.tigrc' , dest: '~/.tigrc'}
      - { src: '~/Code/personal/dotfiles/vim/.vimrc' , dest: '~/.vimrc'}
      - { src: '~/Code/personal/dotfiles/asdf/.asdfrc' , dest: '~/.asdfrc'}
      - { src: '~/Code/personal/dotfiles/superfile/hotkeys.toml' , dest: '~/.config/superfile/hotkeys.toml'}
      - { src: '~/Code/personal/dotfiles/bat/config' , dest: '~/.config/bat/config'}
      - { src: '~/Code/personal/dotfiles/ansible/ansible.cfg' , dest: '~/.ansible.cfg'}
      - { src: '~/Code/personal/dotfiles/ghostty/config' , dest: '~/Library/Application Support/com.mitchellh.ghostty/config'}
      - { src: '~/Code/personal/dotfiles/ghostty/config' , dest: '~/.config/ghostty/config'}
      - { src: '~/Code/personal/dotfiles/lazygit/config.yml' , dest: '~/Library/Application Support/lazygit/config.yml'}

    # Placeholder for files to remove before creating links (maps with src/dest)
    remove_dotfiles: []
  tasks:
  - name: Setup Code dirs
    ansible.builtin.file:
      path: ~/Code/personal
      state: directory
      recurse: yes
  - name: Clone personal repos
    ansible.builtin.git:
      repo: "https://github.com/EoinFarrell/{{ item }}.git"
      dest: ~/Code/personal/{{ item }}
      update: no
    loop: "{{ personal_repos }}"
  - name: Create dirs for symbolic links
    ansible.builtin.file:
      path: "{{ item }}"
      state: directory
      recurse: yes
    loop: "{{ link_dirs }}"
  - name: Remove existing dotfiles
    ansible.builtin.file:
      path: "{{ item.dest }}"
      state: absent
    loop: "{{ dotfile_links }}"
    ignore_errors: true
  - name: Create a symbolic links
    ansible.builtin.file:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
      state: link
    loop: "{{ dotfile_links }}"
    ignore_errors: true
  - name: Find all custom zsh files
    find:
      paths: ~/Code/personal/dotfiles/zsh/oh-my-zsh
    register: find
  - name: ~/.oh-my-zsh/custom
    file:
      src: "{{ item.path }}"
      path: "~/.oh-my-zsh/custom/{{ item.path | basename }}"
      state: link
    with_items: "{{ find.files }}"
  - name: Find all custom Tmuxinator files
    find:
      paths: ~/Code/personal/dotfiles/tmuxinator
    register: findTmuxinator
  - name: ~/.config/tmuxinator
    file:
      src: "{{ item.path }}"
      path: "~/.config/tmuxinator/{{ item.path | basename }}"
      state: link
    with_items: "{{ findTmuxinator.files }}"
  - name: Get latest
    command: getLatestPackages